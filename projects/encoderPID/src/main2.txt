//AJUSTES CTES PID RUEDA 2
#include <Arduino.h>

#include "pinout.h"
#include "motor.h"
#include "encoder.h"

const float motorReduction = 38.3;
const float pulleyReduction = 1.3;
const float encoderResolution = 500;

volatile long ISR1counter = 0;
volatile long ISR2counter = 0;

unsigned long prevT = 0;
//int posPrev = 0;

float v1Filt = 0;
float v1Prev = 0;

float eintegral = 0;
float eprev = 0;


void setup() {
    motor_setup();
    encoder_setup();
    Serial.begin(57600);
    //Serial.begin(115200);   

}

void loop() {

    //int pwm=100/3.0*micros()/1.0e6;
    //motor(pwm, 0);

    long pos=0;
    noInterrupts();
    pos=ISR2counter;
    ISR2counter=0;
    interrupts();

    // Compute velocity with method 1
    long currT = micros();
    float deltaT = ((float) (currT-prevT))/1.0e6;
    //float velocity1 = (pos - posPrev)/deltaT;
    float velocity1 = pos/deltaT;
    //posPrev = pos;
    prevT = currT;

    // Convert count/s to rad/s
    float v1 = velocity1*2*PI/(encoderResolution* motorReduction* pulleyReduction * 2);

    // Low-pass filter (25 Hz cutoff)
    v1Filt = 0.854*v1Filt + 0.0728*v1 + 0.0728*v1Prev;
    v1Prev = v1;

    // Set a target
    //float vt = 10*(sin(currT/1e6)>0); 
    float vt=7.5*sin(prevT/1e6);
    

    // Compute the control signal u
    float kp = 30;
    float ki= 110;
    float kd=1;
    float e = vt-v1Filt;
    float dedt = (e-eprev)/(deltaT);
    eintegral=eintegral+e*deltaT;
    float u = kp*e+ki*eintegral+kd*dedt;

    motor(0, (int)u);
    eprev=e;

    Serial.print(vt);
    Serial.print(" ");
    Serial.print(v1Filt);
    Serial.println();
    delay(1);
}

